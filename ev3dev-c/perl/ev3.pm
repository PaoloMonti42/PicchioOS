# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

package ev3;
use base qw(Exporter);
use base qw(DynaLoader);
package ev3c;
bootstrap ev3;
package ev3;
@EXPORT = qw();

# ---------- BASE METHODS -------------

package ev3;

sub TIEHASH {
    my ($classname,$obj) = @_;
    return bless $obj, $classname;
}

sub CLEAR { }

sub FIRSTKEY { }

sub NEXTKEY { }

sub FETCH {
    my ($self,$field) = @_;
    my $member_func = "swig_${field}_get";
    $self->$member_func();
}

sub STORE {
    my ($self,$field,$newval) = @_;
    my $member_func = "swig_${field}_set";
    $self->$member_func($newval);
}

sub this {
    my $ptr = shift;
    return tied(%$ptr);
}


# ------- FUNCTION WRAPPERS --------

package ev3;

*ev3_init = *ev3c::ev3_init;
*ev3_uninit = *ev3c::ev3_uninit;
*ev3_write_binary = *ev3c::ev3_write_binary;
*ev3_write = *ev3c::ev3_write;
*ev3_write_bool = *ev3c::ev3_write_bool;
*ev3_write_int = *ev3c::ev3_write_int;
*ev3_write_dword = *ev3c::ev3_write_dword;
*ev3_write_byte = *ev3c::ev3_write_byte;
*ev3_write_float = *ev3c::ev3_write_float;
*ev3_read_binary = *ev3c::ev3_read_binary;
*ev3_read = *ev3c::ev3_read;
*ev3_read_bool = *ev3c::ev3_read_bool;
*ev3_read_int = *ev3c::ev3_read_int;
*ev3_read_dword = *ev3c::ev3_read_dword;
*ev3_read_byte = *ev3c::ev3_read_byte;
*ev3_read_float = *ev3c::ev3_read_float;
*ev3_listdir = *ev3c::ev3_listdir;
*ev3_read_keys = *ev3c::ev3_read_keys;
*ev3_poweroff = *ev3c::ev3_poweroff;
*get_led_brightness = *ev3c::get_led_brightness;
*set_led_brightness = *ev3c::set_led_brightness;
*get_led_delay_off = *ev3c::get_led_delay_off;
*set_led_delay_off = *ev3c::set_led_delay_off;
*get_led_delay_on = *ev3c::get_led_delay_on;
*set_led_delay_on = *ev3c::set_led_delay_on;
*get_led_max_brightness = *ev3c::get_led_max_brightness;
*get_led_trigger = *ev3c::get_led_trigger;
*set_led_trigger = *ev3c::set_led_trigger;
*get_led_trigger_inx = *ev3c::get_led_trigger_inx;
*set_led_trigger_inx = *ev3c::set_led_trigger_inx;
*ev3_led_trigger = *ev3c::ev3_led_trigger;
*light_color = *ev3c::light_color;
*set_light = *ev3c::set_light;
*get_light = *ev3c::get_light;
*set_light_trigger = *ev3c::set_light_trigger;
*get_light_trigger = *ev3c::get_light_trigger;
*set_light_blink = *ev3c::set_light_blink;
*get_light_blink = *ev3c::get_light_blink;
*get_port_driver_name = *ev3c::get_port_driver_name;
*get_port_mode = *ev3c::get_port_mode;
*set_port_mode = *ev3c::set_port_mode;
*get_port_modes = *ev3c::get_port_modes;
*get_port_port_name = *ev3c::get_port_port_name;
*set_port_set_device = *ev3c::set_port_set_device;
*get_port_status = *ev3c::get_port_status;
*ev3_port_type = *ev3c::ev3_port_type;
*get_port_type_inx = *ev3c::get_port_type_inx;
*get_port_desc = *ev3c::get_port_desc;
*ev3_port_desc = *ev3c::ev3_port_desc;
*ev3_port_desc_type_inx = *ev3c::ev3_port_desc_type_inx;
*ev3_port_desc_port = *ev3c::ev3_port_desc_port;
*ev3_port_desc_extport = *ev3c::ev3_port_desc_extport;
*ev3_port_desc_addr = *ev3c::ev3_port_desc_addr;
*ev3_port_port_name = *ev3c::ev3_port_port_name;
*ev3_search_port_type = *ev3c::ev3_search_port_type;
*ev3_search_port_plugged_in = *ev3c::ev3_search_port_plugged_in;
*ev3_port_mode = *ev3c::ev3_port_mode;
*get_port_mode_inx = *ev3c::get_port_mode_inx;
*set_port_mode_inx = *ev3c::set_port_mode_inx;
*ev3_port_init = *ev3c::ev3_port_init;
*ev3_search_port = *ev3c::ev3_search_port;
*ev3_parse_port_name = *ev3c::ev3_parse_port_name;
*ev3_port_name = *ev3c::ev3_port_name;
*get_sensor_bin_data = *ev3c::get_sensor_bin_data;
*set_sensor_bin_data = *ev3c::set_sensor_bin_data;
*get_sensor_bin_data_format = *ev3c::get_sensor_bin_data_format;
*set_sensor_command = *ev3c::set_sensor_command;
*get_sensor_commands = *ev3c::get_sensor_commands;
*get_sensor_direct = *ev3c::get_sensor_direct;
*set_sensor_direct = *ev3c::set_sensor_direct;
*get_sensor_decimals = *ev3c::get_sensor_decimals;
*get_sensor_driver_name = *ev3c::get_sensor_driver_name;
*get_sensor_fw_version = *ev3c::get_sensor_fw_version;
*get_sensor_mode = *ev3c::get_sensor_mode;
*set_sensor_mode = *ev3c::set_sensor_mode;
*get_sensor_modes = *ev3c::get_sensor_modes;
*get_sensor_num_values = *ev3c::get_sensor_num_values;
*get_sensor_poll_ms = *ev3c::get_sensor_poll_ms;
*set_sensor_poll_ms = *ev3c::set_sensor_poll_ms;
*get_sensor_port_name = *ev3c::get_sensor_port_name;
*get_sensor_units = *ev3c::get_sensor_units;
*get_sensor_value0 = *ev3c::get_sensor_value0;
*get_sensor_value1 = *ev3c::get_sensor_value1;
*get_sensor_value2 = *ev3c::get_sensor_value2;
*get_sensor_value3 = *ev3c::get_sensor_value3;
*get_sensor_value4 = *ev3c::get_sensor_value4;
*get_sensor_value5 = *ev3c::get_sensor_value5;
*get_sensor_value6 = *ev3c::get_sensor_value6;
*get_sensor_value7 = *ev3c::get_sensor_value7;
*get_sensor_value = *ev3c::get_sensor_value;
*ev3_sensor_type = *ev3c::ev3_sensor_type;
*get_sensor_type_inx = *ev3c::get_sensor_type_inx;
*get_sensor_desc = *ev3c::get_sensor_desc;
*ev3_sensor_desc = *ev3c::ev3_sensor_desc;
*ev3_sensor_desc_type_inx = *ev3c::ev3_sensor_desc_type_inx;
*ev3_sensor_desc_port = *ev3c::ev3_sensor_desc_port;
*ev3_sensor_desc_extport = *ev3c::ev3_sensor_desc_extport;
*ev3_sensor_desc_addr = *ev3c::ev3_sensor_desc_addr;
*ev3_sensor_port_name = *ev3c::ev3_sensor_port_name;
*ev3_search_sensor = *ev3c::ev3_search_sensor;
*ev3_search_sensor_plugged_in = *ev3c::ev3_search_sensor_plugged_in;
*ev3_sensor_mode = *ev3c::ev3_sensor_mode;
*get_sensor_mode_inx = *ev3c::get_sensor_mode_inx;
*set_sensor_mode_inx = *ev3c::set_sensor_mode_inx;
*ev3_sensor_command = *ev3c::ev3_sensor_command;
*set_sensor_command_inx = *ev3c::set_sensor_command_inx;
*ev3_sensor_init = *ev3c::ev3_sensor_init;
*set_tacho_command = *ev3c::set_tacho_command;
*get_tacho_commands = *ev3c::get_tacho_commands;
*get_tacho_count_per_rot = *ev3c::get_tacho_count_per_rot;
*get_tacho_driver_name = *ev3c::get_tacho_driver_name;
*get_tacho_duty_cycle = *ev3c::get_tacho_duty_cycle;
*get_tacho_duty_cycle_sp = *ev3c::get_tacho_duty_cycle_sp;
*set_tacho_duty_cycle_sp = *ev3c::set_tacho_duty_cycle_sp;
*get_tacho_encoder_polarity = *ev3c::get_tacho_encoder_polarity;
*set_tacho_encoder_polarity = *ev3c::set_tacho_encoder_polarity;
*get_tacho_hold_pid_Kd = *ev3c::get_tacho_hold_pid_Kd;
*set_tacho_hold_pid_Kd = *ev3c::set_tacho_hold_pid_Kd;
*get_tacho_hold_pid_Ki = *ev3c::get_tacho_hold_pid_Ki;
*set_tacho_hold_pid_Ki = *ev3c::set_tacho_hold_pid_Ki;
*get_tacho_hold_pid_Kp = *ev3c::get_tacho_hold_pid_Kp;
*set_tacho_hold_pid_Kp = *ev3c::set_tacho_hold_pid_Kp;
*get_tacho_polarity = *ev3c::get_tacho_polarity;
*set_tacho_polarity = *ev3c::set_tacho_polarity;
*get_tacho_port_name = *ev3c::get_tacho_port_name;
*get_tacho_position = *ev3c::get_tacho_position;
*set_tacho_position = *ev3c::set_tacho_position;
*get_tacho_position_sp = *ev3c::get_tacho_position_sp;
*set_tacho_position_sp = *ev3c::set_tacho_position_sp;
*get_tacho_ramp_down_sp = *ev3c::get_tacho_ramp_down_sp;
*set_tacho_ramp_down_sp = *ev3c::set_tacho_ramp_down_sp;
*get_tacho_ramp_up_sp = *ev3c::get_tacho_ramp_up_sp;
*set_tacho_ramp_up_sp = *ev3c::set_tacho_ramp_up_sp;
*get_tacho_speed = *ev3c::get_tacho_speed;
*get_tacho_speed_pid_Kd = *ev3c::get_tacho_speed_pid_Kd;
*set_tacho_speed_pid_Kd = *ev3c::set_tacho_speed_pid_Kd;
*get_tacho_speed_pid_Ki = *ev3c::get_tacho_speed_pid_Ki;
*set_tacho_speed_pid_Ki = *ev3c::set_tacho_speed_pid_Ki;
*get_tacho_speed_pid_Kp = *ev3c::get_tacho_speed_pid_Kp;
*set_tacho_speed_pid_Kp = *ev3c::set_tacho_speed_pid_Kp;
*get_tacho_speed_regulation = *ev3c::get_tacho_speed_regulation;
*set_tacho_speed_regulation = *ev3c::set_tacho_speed_regulation;
*get_tacho_speed_sp = *ev3c::get_tacho_speed_sp;
*set_tacho_speed_sp = *ev3c::set_tacho_speed_sp;
*get_tacho_state = *ev3c::get_tacho_state;
*get_tacho_stop_command = *ev3c::get_tacho_stop_command;
*set_tacho_stop_command = *ev3c::set_tacho_stop_command;
*get_tacho_stop_commands = *ev3c::get_tacho_stop_commands;
*get_tacho_time_sp = *ev3c::get_tacho_time_sp;
*set_tacho_time_sp = *ev3c::set_tacho_time_sp;
*ev3_tacho_type = *ev3c::ev3_tacho_type;
*get_tacho_type_inx = *ev3c::get_tacho_type_inx;
*get_tacho_desc = *ev3c::get_tacho_desc;
*ev3_tacho_desc = *ev3c::ev3_tacho_desc;
*ev3_tacho_desc_type_inx = *ev3c::ev3_tacho_desc_type_inx;
*ev3_tacho_desc_port = *ev3c::ev3_tacho_desc_port;
*ev3_tacho_desc_extport = *ev3c::ev3_tacho_desc_extport;
*ev3_tacho_port_name = *ev3c::ev3_tacho_port_name;
*ev3_search_tacho = *ev3c::ev3_search_tacho;
*ev3_search_tacho_plugged_in = *ev3c::ev3_search_tacho_plugged_in;
*ev3_tacho_command = *ev3c::ev3_tacho_command;
*set_tacho_command_inx = *ev3c::set_tacho_command_inx;
*ev3_tacho_stop_command = *ev3c::ev3_tacho_stop_command;
*get_tacho_stop_command_inx = *ev3c::get_tacho_stop_command_inx;
*set_tacho_stop_command_inx = *ev3c::set_tacho_stop_command_inx;
*get_tacho_state_flags = *ev3c::get_tacho_state_flags;
*ev3_tacho_init = *ev3c::ev3_tacho_init;
*set_dc_command = *ev3c::set_dc_command;
*get_dc_commands = *ev3c::get_dc_commands;
*get_dc_driver_name = *ev3c::get_dc_driver_name;
*get_dc_duty_cycle = *ev3c::get_dc_duty_cycle;
*get_dc_duty_cycle_sp = *ev3c::get_dc_duty_cycle_sp;
*set_dc_duty_cycle_sp = *ev3c::set_dc_duty_cycle_sp;
*get_dc_polarity = *ev3c::get_dc_polarity;
*set_dc_polarity = *ev3c::set_dc_polarity;
*get_dc_port_name = *ev3c::get_dc_port_name;
*get_dc_state = *ev3c::get_dc_state;
*set_dc_stop_command = *ev3c::set_dc_stop_command;
*get_dc_stop_commands = *ev3c::get_dc_stop_commands;
*get_dc_ramp_down_sp = *ev3c::get_dc_ramp_down_sp;
*set_dc_ramp_down_sp = *ev3c::set_dc_ramp_down_sp;
*get_dc_ramp_up_sp = *ev3c::get_dc_ramp_up_sp;
*set_dc_ramp_up_sp = *ev3c::set_dc_ramp_up_sp;
*get_dc_time_sp = *ev3c::get_dc_time_sp;
*set_dc_time_sp = *ev3c::set_dc_time_sp;
*ev3_dc_type = *ev3c::ev3_dc_type;
*get_dc_type_inx = *ev3c::get_dc_type_inx;
*get_dc_desc = *ev3c::get_dc_desc;
*ev3_dc_desc = *ev3c::ev3_dc_desc;
*ev3_dc_desc_type_inx = *ev3c::ev3_dc_desc_type_inx;
*ev3_dc_desc_port = *ev3c::ev3_dc_desc_port;
*ev3_dc_desc_extport = *ev3c::ev3_dc_desc_extport;
*ev3_dc_port_name = *ev3c::ev3_dc_port_name;
*ev3_search_dc = *ev3c::ev3_search_dc;
*ev3_search_dc_plugged_in = *ev3c::ev3_search_dc_plugged_in;
*ev3_dc_command = *ev3c::ev3_dc_command;
*set_dc_command_inx = *ev3c::set_dc_command_inx;
*ev3_dc_stop_command = *ev3c::ev3_dc_stop_command;
*set_dc_stop_command_inx = *ev3c::set_dc_stop_command_inx;
*get_dc_state_flags = *ev3c::get_dc_state_flags;
*ev3_dc_init = *ev3c::ev3_dc_init;
*get_servo_command = *ev3c::get_servo_command;
*set_servo_command = *ev3c::set_servo_command;
*get_servo_driver_name = *ev3c::get_servo_driver_name;
*get_servo_max_pulse_sp = *ev3c::get_servo_max_pulse_sp;
*set_servo_max_pulse_sp = *ev3c::set_servo_max_pulse_sp;
*get_servo_mid_pulse_sp = *ev3c::get_servo_mid_pulse_sp;
*set_servo_mid_pulse_sp = *ev3c::set_servo_mid_pulse_sp;
*get_servo_min_pulse_sp = *ev3c::get_servo_min_pulse_sp;
*set_servo_min_pulse_sp = *ev3c::set_servo_min_pulse_sp;
*get_servo_polarity = *ev3c::get_servo_polarity;
*set_servo_polarity = *ev3c::set_servo_polarity;
*get_servo_port_name = *ev3c::get_servo_port_name;
*get_servo_position_sp = *ev3c::get_servo_position_sp;
*set_servo_position_sp = *ev3c::set_servo_position_sp;
*get_servo_rate_sp = *ev3c::get_servo_rate_sp;
*set_servo_rate_sp = *ev3c::set_servo_rate_sp;
*get_servo_state = *ev3c::get_servo_state;
*ev3_servo_type = *ev3c::ev3_servo_type;
*get_servo_type_inx = *ev3c::get_servo_type_inx;
*get_servo_desc = *ev3c::get_servo_desc;
*ev3_servo_desc = *ev3c::ev3_servo_desc;
*ev3_servo_desc_type_inx = *ev3c::ev3_servo_desc_type_inx;
*ev3_servo_desc_port = *ev3c::ev3_servo_desc_port;
*ev3_servo_desc_extport = *ev3c::ev3_servo_desc_extport;
*ev3_servo_desc_addr = *ev3c::ev3_servo_desc_addr;
*ev3_servo_port_name = *ev3c::ev3_servo_port_name;
*ev3_search_servo = *ev3c::ev3_search_servo;
*ev3_search_servo_plugged_in = *ev3c::ev3_search_servo_plugged_in;
*ev3_servo_command = *ev3c::ev3_servo_command;
*get_servo_command_inx = *ev3c::get_servo_command_inx;
*set_servo_command_inx = *ev3c::set_servo_command_inx;
*get_servo_state_flags = *ev3c::get_servo_state_flags;
*ev3_servo_init = *ev3c::ev3_servo_init;

############# Class : ev3::EV3_PORT ##############

package ev3::EV3_PORT;
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( ev3 );
%OWNER = ();
%ITERATORS = ();
*swig_type_inx_get = *ev3c::EV3_PORT_type_inx_get;
*swig_type_inx_set = *ev3c::EV3_PORT_type_inx_set;
*swig_port_get = *ev3c::EV3_PORT_port_get;
*swig_port_set = *ev3c::EV3_PORT_port_set;
*swig_extport_get = *ev3c::EV3_PORT_extport_get;
*swig_extport_set = *ev3c::EV3_PORT_extport_set;
*swig_addr_get = *ev3c::EV3_PORT_addr_get;
*swig_addr_set = *ev3c::EV3_PORT_addr_set;
sub new {
    my $pkg = shift;
    my $self = ev3c::new_EV3_PORT(@_);
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
        ev3c::delete_EV3_PORT($self);
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


############# Class : ev3::EV3_SENSOR ##############

package ev3::EV3_SENSOR;
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( ev3 );
%OWNER = ();
%ITERATORS = ();
*swig_type_inx_get = *ev3c::EV3_SENSOR_type_inx_get;
*swig_type_inx_set = *ev3c::EV3_SENSOR_type_inx_set;
*swig_port_get = *ev3c::EV3_SENSOR_port_get;
*swig_port_set = *ev3c::EV3_SENSOR_port_set;
*swig_extport_get = *ev3c::EV3_SENSOR_extport_get;
*swig_extport_set = *ev3c::EV3_SENSOR_extport_set;
*swig_addr_get = *ev3c::EV3_SENSOR_addr_get;
*swig_addr_set = *ev3c::EV3_SENSOR_addr_set;
sub new {
    my $pkg = shift;
    my $self = ev3c::new_EV3_SENSOR(@_);
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
        ev3c::delete_EV3_SENSOR($self);
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


############# Class : ev3::EV3_TACHO ##############

package ev3::EV3_TACHO;
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( ev3 );
%OWNER = ();
%ITERATORS = ();
*swig_type_inx_get = *ev3c::EV3_TACHO_type_inx_get;
*swig_type_inx_set = *ev3c::EV3_TACHO_type_inx_set;
*swig_port_get = *ev3c::EV3_TACHO_port_get;
*swig_port_set = *ev3c::EV3_TACHO_port_set;
*swig_extport_get = *ev3c::EV3_TACHO_extport_get;
*swig_extport_set = *ev3c::EV3_TACHO_extport_set;
sub new {
    my $pkg = shift;
    my $self = ev3c::new_EV3_TACHO(@_);
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
        ev3c::delete_EV3_TACHO($self);
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


############# Class : ev3::EV3_DC ##############

package ev3::EV3_DC;
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( ev3 );
%OWNER = ();
%ITERATORS = ();
*swig_type_inx_get = *ev3c::EV3_DC_type_inx_get;
*swig_type_inx_set = *ev3c::EV3_DC_type_inx_set;
*swig_port_get = *ev3c::EV3_DC_port_get;
*swig_port_set = *ev3c::EV3_DC_port_set;
*swig_extport_get = *ev3c::EV3_DC_extport_get;
*swig_extport_set = *ev3c::EV3_DC_extport_set;
sub new {
    my $pkg = shift;
    my $self = ev3c::new_EV3_DC(@_);
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
        ev3c::delete_EV3_DC($self);
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


############# Class : ev3::EV3_SERVO ##############

package ev3::EV3_SERVO;
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( ev3 );
%OWNER = ();
%ITERATORS = ();
*swig_type_inx_get = *ev3c::EV3_SERVO_type_inx_get;
*swig_type_inx_set = *ev3c::EV3_SERVO_type_inx_set;
*swig_port_get = *ev3c::EV3_SERVO_port_get;
*swig_port_set = *ev3c::EV3_SERVO_port_set;
*swig_extport_get = *ev3c::EV3_SERVO_extport_get;
*swig_extport_set = *ev3c::EV3_SERVO_extport_set;
*swig_addr_get = *ev3c::EV3_SERVO_addr_get;
*swig_addr_set = *ev3c::EV3_SERVO_addr_set;
sub new {
    my $pkg = shift;
    my $self = ev3c::new_EV3_SERVO(@_);
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
        ev3c::delete_EV3_SERVO($self);
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


# ------- VARIABLE STUBS --------

package ev3;

*EV3_BRICK = *ev3c::EV3_BRICK;
*EV3_KEY__NONE_ = *ev3c::EV3_KEY__NONE_;
*EV3_KEY_UP = *ev3c::EV3_KEY_UP;
*EV3_KEY_DOWN = *ev3c::EV3_KEY_DOWN;
*EV3_KEY_LEFT = *ev3c::EV3_KEY_LEFT;
*EV3_KEY_RIGHT = *ev3c::EV3_KEY_RIGHT;
*EV3_KEY_CENTER = *ev3c::EV3_KEY_CENTER;
*EV3_KEY_BACK = *ev3c::EV3_KEY_BACK;
*EV3_LEFT_GREEN = *ev3c::EV3_LEFT_GREEN;
*EV3_RIGHT_GREEN = *ev3c::EV3_RIGHT_GREEN;
*EV3_LEFT_RED = *ev3c::EV3_LEFT_RED;
*EV3_RIGHT_RED = *ev3c::EV3_RIGHT_RED;
*LED_OUTA = *ev3c::LED_OUTA;
*LED_OUTB = *ev3c::LED_OUTB;
*LED_OUTC = *ev3c::LED_OUTC;
*LED_OUTD = *ev3c::LED_OUTD;
*LED__COUNT_ = *ev3c::LED__COUNT_;
*TRIGGER_NONE = *ev3c::TRIGGER_NONE;
*TRIGGER_MMC0 = *ev3c::TRIGGER_MMC0;
*TRIGGER_TIMER = *ev3c::TRIGGER_TIMER;
*TRIGGER_HEARTBEAT = *ev3c::TRIGGER_HEARTBEAT;
*TRIGGER_DEFAULT_ON = *ev3c::TRIGGER_DEFAULT_ON;
*TRIGGER_TRANSIENT = *ev3c::TRIGGER_TRANSIENT;
*TRIGGER_LEGOEV3_BATTERY_CHARGING_OR_FULL = *ev3c::TRIGGER_LEGOEV3_BATTERY_CHARGING_OR_FULL;
*TRIGGER_LEGOEV3_BATTERY_CHARGING = *ev3c::TRIGGER_LEGOEV3_BATTERY_CHARGING;
*TRIGGER_LEGOEV3_BATTERY_FULL = *ev3c::TRIGGER_LEGOEV3_BATTERY_FULL;
*TRIGGER_LEGOEV3_BATTERY_CHARGING_BLINK_FULL_SOLID = *ev3c::TRIGGER_LEGOEV3_BATTERY_CHARGING_BLINK_FULL_SOLID;
*TRIGGER_RFKILL0 = *ev3c::TRIGGER_RFKILL0;
*TRIGGER_PHY0RX = *ev3c::TRIGGER_PHY0RX;
*TRIGGER_PHY0TX = *ev3c::TRIGGER_PHY0TX;
*TRIGGER_PHY0ASSOC = *ev3c::TRIGGER_PHY0ASSOC;
*TRIGGER_PHY0RADIO = *ev3c::TRIGGER_PHY0RADIO;
*TRIGGER_RFKILL1 = *ev3c::TRIGGER_RFKILL1;
*TRIGGER__COUNT_ = *ev3c::TRIGGER__COUNT_;
*LED_ATTR__COUNT_ = *ev3c::LED_ATTR__COUNT_;
*LIT_LEFT = *ev3c::LIT_LEFT;
*LIT_RIGHT = *ev3c::LIT_RIGHT;
*LIT__LOC__ = *ev3c::LIT__LOC__;
*LIT_OFF = *ev3c::LIT_OFF;
*LIT_GREEN = *ev3c::LIT_GREEN;
*LIT_RED = *ev3c::LIT_RED;
*LIT_AMBER = *ev3c::LIT_AMBER;
*LIT__COL__ = *ev3c::LIT__COL__;
*LIT_COLOR = *ev3c::LIT_COLOR;
*PORT_DIR = *ev3c::PORT_DIR;
*PORT_DESC__LIMIT_ = *ev3c::PORT_DESC__LIMIT_;
*PORT__NONE_ = *ev3c::PORT__NONE_;

my %__ev3_port_hash;
tie %__ev3_port_hash,"ev3::EV3_PORT", $ev3c::ev3_port;
$ev3_port= \%__ev3_port_hash;
bless $ev3_port, ev3::EV3_PORT;
*PORT_TYPE__NONE_ = *ev3c::PORT_TYPE__NONE_;
*HT_NXT_SMUX_PORT = *ev3c::HT_NXT_SMUX_PORT;
*LEGOEV3_INPUT_PORT = *ev3c::LEGOEV3_INPUT_PORT;
*LEGOEV3_OUTPUT_PORT = *ev3c::LEGOEV3_OUTPUT_PORT;
*MS_EV3_SMUX_PORT = *ev3c::MS_EV3_SMUX_PORT;
*MS_NXTMMX_OUT_PORT = *ev3c::MS_NXTMMX_OUT_PORT;
*WEDO_PORT = *ev3c::WEDO_PORT;
*PORT_TYPE__COUNT_ = *ev3c::PORT_TYPE__COUNT_;
*PORT_TYPE__UNKNOWN_ = *ev3c::PORT_TYPE__UNKNOWN_;
*PORT_MODE__NONE_ = *ev3c::PORT_MODE__NONE_;
*HT_NXT_SMUX_PORT_ANALOG = *ev3c::HT_NXT_SMUX_PORT_ANALOG;
*HT_NXT_SMUX_ANALOG = *ev3c::HT_NXT_SMUX_ANALOG;
*HT_NXT_SMUX_PORT_I2C = *ev3c::HT_NXT_SMUX_PORT_I2C;
*HT_NXT_SMUX_I2C = *ev3c::HT_NXT_SMUX_I2C;
*LEGOEV3_INPUT_PORT_AUTO = *ev3c::LEGOEV3_INPUT_PORT_AUTO;
*INPUT_AUTO = *ev3c::INPUT_AUTO;
*LEGOEV3_INPUT_PORT_NXT_ANALOG = *ev3c::LEGOEV3_INPUT_PORT_NXT_ANALOG;
*INPUT_NXT_ANALOG = *ev3c::INPUT_NXT_ANALOG;
*LEGOEV3_INPUT_PORT_NXT_COLOR = *ev3c::LEGOEV3_INPUT_PORT_NXT_COLOR;
*INPUT_NXT_COLOR = *ev3c::INPUT_NXT_COLOR;
*LEGOEV3_INPUT_PORT_NXT_I2C = *ev3c::LEGOEV3_INPUT_PORT_NXT_I2C;
*INPUT_NXT_I2C = *ev3c::INPUT_NXT_I2C;
*LEGOEV3_INPUT_PORT_EV3_ANALOG = *ev3c::LEGOEV3_INPUT_PORT_EV3_ANALOG;
*INPUT_EV3_ANALOG = *ev3c::INPUT_EV3_ANALOG;
*LEGOEV3_INPUT_PORT_EV3_UART = *ev3c::LEGOEV3_INPUT_PORT_EV3_UART;
*INPUT_EV3_UART = *ev3c::INPUT_EV3_UART;
*LEGOEV3_INPUT_PORT_OTHER_UART = *ev3c::LEGOEV3_INPUT_PORT_OTHER_UART;
*INPUT_OTHER_UART = *ev3c::INPUT_OTHER_UART;
*LEGOEV3_INPUT_PORT_RAW = *ev3c::LEGOEV3_INPUT_PORT_RAW;
*INPUT_RAW = *ev3c::INPUT_RAW;
*LEGOEV3_OUTPUT_PORT_AUTO = *ev3c::LEGOEV3_OUTPUT_PORT_AUTO;
*OUTPUT_AUTO = *ev3c::OUTPUT_AUTO;
*LEGOEV3_OUTPUT_PORT_EV3_TACHO_MOTOR = *ev3c::LEGOEV3_OUTPUT_PORT_EV3_TACHO_MOTOR;
*OUTPUT_EV3_TACHO_MOTOR = *ev3c::OUTPUT_EV3_TACHO_MOTOR;
*LEGOEV3_OUTPUT_PORT_RCX_MOTOR = *ev3c::LEGOEV3_OUTPUT_PORT_RCX_MOTOR;
*OUTPUT_RCX_MOTOR = *ev3c::OUTPUT_RCX_MOTOR;
*LEGOEV3_OUTPUT_PORT_RCX_LED = *ev3c::LEGOEV3_OUTPUT_PORT_RCX_LED;
*OUTPUT_RCX_LED = *ev3c::OUTPUT_RCX_LED;
*LEGOEV3_OUTPUT_PORT_RAW = *ev3c::LEGOEV3_OUTPUT_PORT_RAW;
*OUTPUT_RAW = *ev3c::OUTPUT_RAW;
*MS_EV3_SMUX_PORT_UART = *ev3c::MS_EV3_SMUX_PORT_UART;
*MS_EV3_SMUX_UART = *ev3c::MS_EV3_SMUX_UART;
*MS_EV3_SMUX_PORT_ANALOG = *ev3c::MS_EV3_SMUX_PORT_ANALOG;
*MS_EV3_SMUX_ANALOG = *ev3c::MS_EV3_SMUX_ANALOG;
*MS_NXTMMX_OUT_PORT_TACHO_MOTOR = *ev3c::MS_NXTMMX_OUT_PORT_TACHO_MOTOR;
*MS_NXTMMX_TACHO_MOTOR = *ev3c::MS_NXTMMX_TACHO_MOTOR;
*WEDO_PORT_AUTO = *ev3c::WEDO_PORT_AUTO;
*WEDO_AUTO = *ev3c::WEDO_AUTO;
*PORT_MODE__COUNT_ = *ev3c::PORT_MODE__COUNT_;
*PORT_MODE__UNKNOWN_ = *ev3c::PORT_MODE__UNKNOWN_;
*EV3_PORT__NONE_ = *ev3c::EV3_PORT__NONE_;
*EXT_PORT__NONE_ = *ev3c::EXT_PORT__NONE_;
*INPUT_1 = *ev3c::INPUT_1;
*INPUT_2 = *ev3c::INPUT_2;
*INPUT_3 = *ev3c::INPUT_3;
*INPUT_4 = *ev3c::INPUT_4;
*OUTPUT_A = *ev3c::OUTPUT_A;
*OUTPUT_B = *ev3c::OUTPUT_B;
*OUTPUT_C = *ev3c::OUTPUT_C;
*OUTPUT_D = *ev3c::OUTPUT_D;
*MUX_1 = *ev3c::MUX_1;
*MUX_2 = *ev3c::MUX_2;
*MUX_3 = *ev3c::MUX_3;
*MUX_4 = *ev3c::MUX_4;
*SERVO__OFFSET_ = *ev3c::SERVO__OFFSET_;
*SERVO_1 = *ev3c::SERVO_1;
*SERVO_2 = *ev3c::SERVO_2;
*SERVO_3 = *ev3c::SERVO_3;
*SERVO_4 = *ev3c::SERVO_4;
*SERVO_5 = *ev3c::SERVO_5;
*SERVO_6 = *ev3c::SERVO_6;
*SERVO_7 = *ev3c::SERVO_7;
*SERVO_8 = *ev3c::SERVO_8;
*NXTMMX__OFFSET_ = *ev3c::NXTMMX__OFFSET_;
*NXTMMX_1 = *ev3c::NXTMMX_1;
*NXTMMX_2 = *ev3c::NXTMMX_2;
*WEDO__OFFSET_ = *ev3c::WEDO__OFFSET_;
*WEDO_1 = *ev3c::WEDO_1;
*WEDO_2 = *ev3c::WEDO_2;
*WEDO_3 = *ev3c::WEDO_3;
*WEDO_4 = *ev3c::WEDO_4;
*SENSOR_DIR = *ev3c::SENSOR_DIR;
*SENSOR_DESC__LIMIT_ = *ev3c::SENSOR_DESC__LIMIT_;
*SENSOR__NONE_ = *ev3c::SENSOR__NONE_;

my %__ev3_sensor_hash;
tie %__ev3_sensor_hash,"ev3::EV3_SENSOR", $ev3c::ev3_sensor;
$ev3_sensor= \%__ev3_sensor_hash;
bless $ev3_sensor, ev3::EV3_SENSOR;
*SENSOR_TYPE__NONE_ = *ev3c::SENSOR_TYPE__NONE_;
*EV3_ANALOG_XX = *ev3c::EV3_ANALOG_XX;
*NXT_ANALOG = *ev3c::NXT_ANALOG;
*PIXY_LEGO = *ev3c::PIXY_LEGO;
*DI_DFLEX = *ev3c::DI_DFLEX;
*HT_NXT_COLOR = *ev3c::HT_NXT_COLOR;
*HT_NXT_ANGLE = *ev3c::HT_NXT_ANGLE;
*HT_NXT_ACCEL = *ev3c::HT_NXT_ACCEL;
*HT_NXT_BAROMETRIC = *ev3c::HT_NXT_BAROMETRIC;
*HT_NXT_COLOR_V2 = *ev3c::HT_NXT_COLOR_V2;
*HT_NXT_EOPD = *ev3c::HT_NXT_EOPD;
*HT_NXT_FORCE = *ev3c::HT_NXT_FORCE;
*HT_NXT_GYRO = *ev3c::HT_NXT_GYRO;
*HT_NXT_IR_LINK = *ev3c::HT_NXT_IR_LINK;
*HT_NXT_IR_RECEIVER = *ev3c::HT_NXT_IR_RECEIVER;
*HT_NXT_PIR = *ev3c::HT_NXT_PIR;
*HT_NXT_COMPASS = *ev3c::HT_NXT_COMPASS;
*HT_NXT_MAG = *ev3c::HT_NXT_MAG;
*HT_NXT_IR_SEEK_V2 = *ev3c::HT_NXT_IR_SEEK_V2;
*HT_NXT_SMUX = *ev3c::HT_NXT_SMUX;
*HT_SUPER_PRO = *ev3c::HT_SUPER_PRO;
*LEGO_EV3_US = *ev3c::LEGO_EV3_US;
*LEGO_EV3_GYRO = *ev3c::LEGO_EV3_GYRO;
*LEGO_EV3_COLOR = *ev3c::LEGO_EV3_COLOR;
*LEGO_EV3_TOUCH = *ev3c::LEGO_EV3_TOUCH;
*LEGO_EV3_IR = *ev3c::LEGO_EV3_IR;
*WEDO_HUB = *ev3c::WEDO_HUB;
*WEDO_MOTION = *ev3c::WEDO_MOTION;
*WEDO_TILT = *ev3c::WEDO_TILT;
*LEGO_POWER_STORAGE = *ev3c::LEGO_POWER_STORAGE;
*LEGO_NXT_TOUCH = *ev3c::LEGO_NXT_TOUCH;
*LEGO_NXT_LIGHT = *ev3c::LEGO_NXT_LIGHT;
*LEGO_NXT_SOUND = *ev3c::LEGO_NXT_SOUND;
*LEGO_NXT_US = *ev3c::LEGO_NXT_US;
*MI_XG1300L = *ev3c::MI_XG1300L;
*MS_ABSOLUTE_IMU = *ev3c::MS_ABSOLUTE_IMU;
*MS_ANGLE = *ev3c::MS_ANGLE;
*MS_EV3_SMUX = *ev3c::MS_EV3_SMUX;
*MS_LIGHT_ARRAY = *ev3c::MS_LIGHT_ARRAY;
*MS_LINE_LEADER = *ev3c::MS_LINE_LEADER;
*MS_NXTCAM = *ev3c::MS_NXTCAM;
*MS_NXTMMX = *ev3c::MS_NXTMMX;
*MS_8CH_SERVO = *ev3c::MS_8CH_SERVO;
*MS_PIXY_ADAPTER = *ev3c::MS_PIXY_ADAPTER;
*MS_NXT_TOUCH_MUX = *ev3c::MS_NXT_TOUCH_MUX;
*SENSOR_TYPE__COUNT_ = *ev3c::SENSOR_TYPE__COUNT_;
*SENSOR_TYPE__UNKNOWN_ = *ev3c::SENSOR_TYPE__UNKNOWN_;
*SENSOR_MODE__NONE_ = *ev3c::SENSOR_MODE__NONE_;
*EV3_ANALOG_XX_ANALOG = *ev3c::EV3_ANALOG_XX_ANALOG;
*NXT_ANALOG_ANALOG_0 = *ev3c::NXT_ANALOG_ANALOG_0;
*NXT_ANALOG_ANALOG_1 = *ev3c::NXT_ANALOG_ANALOG_1;
*PIXY_LEGO_ALL = *ev3c::PIXY_LEGO_ALL;
*PIXY_LEGO_SIG1 = *ev3c::PIXY_LEGO_SIG1;
*PIXY_LEGO_SIG2 = *ev3c::PIXY_LEGO_SIG2;
*PIXY_LEGO_SIG3 = *ev3c::PIXY_LEGO_SIG3;
*PIXY_LEGO_SIG4 = *ev3c::PIXY_LEGO_SIG4;
*PIXY_LEGO_SIG5 = *ev3c::PIXY_LEGO_SIG5;
*PIXY_LEGO_SIG6 = *ev3c::PIXY_LEGO_SIG6;
*PIXY_LEGO_SIG7 = *ev3c::PIXY_LEGO_SIG7;
*PIXY_LEGO_COL_CODE = *ev3c::PIXY_LEGO_COL_CODE;
*PIXY_LEGO_ANGLE = *ev3c::PIXY_LEGO_ANGLE;
*DI_DFLEX_FLEX = *ev3c::DI_DFLEX_FLEX;
*HT_NXT_COLOR_COLOR = *ev3c::HT_NXT_COLOR_COLOR;
*HT_NXT_COLOR_RED = *ev3c::HT_NXT_COLOR_RED;
*HT_NXT_COLOR_GREEN = *ev3c::HT_NXT_COLOR_GREEN;
*HT_NXT_COLOR_BLUE = *ev3c::HT_NXT_COLOR_BLUE;
*HT_NXT_COLOR_RAW = *ev3c::HT_NXT_COLOR_RAW;
*HT_NXT_COLOR_NORM = *ev3c::HT_NXT_COLOR_NORM;
*HT_NXT_COLOR_ALL = *ev3c::HT_NXT_COLOR_ALL;
*HT_NXT_ANGLE_ANGLE = *ev3c::HT_NXT_ANGLE_ANGLE;
*HT_NXT_ANGLE_ANGLE_ACC = *ev3c::HT_NXT_ANGLE_ANGLE_ACC;
*HT_NXT_ANGLE_SPEED = *ev3c::HT_NXT_ANGLE_SPEED;
*HT_NXT_ACCEL_ACCEL = *ev3c::HT_NXT_ACCEL_ACCEL;
*HT_NXT_ACCEL_ALL = *ev3c::HT_NXT_ACCEL_ALL;
*HT_NXT_BAROMETRIC_PRESS = *ev3c::HT_NXT_BAROMETRIC_PRESS;
*HT_NXT_BAROMETRIC_TEMP = *ev3c::HT_NXT_BAROMETRIC_TEMP;
*HT_NXT_COLOR_V2_COLOR = *ev3c::HT_NXT_COLOR_V2_COLOR;
*HT_NXT_COLOR_V2_RED = *ev3c::HT_NXT_COLOR_V2_RED;
*HT_NXT_COLOR_V2_GREEN = *ev3c::HT_NXT_COLOR_V2_GREEN;
*HT_NXT_COLOR_V2_BLUE = *ev3c::HT_NXT_COLOR_V2_BLUE;
*HT_NXT_COLOR_V2_WHITE = *ev3c::HT_NXT_COLOR_V2_WHITE;
*HT_NXT_COLOR_V2_NORM = *ev3c::HT_NXT_COLOR_V2_NORM;
*HT_NXT_COLOR_V2_ALL = *ev3c::HT_NXT_COLOR_V2_ALL;
*HT_NXT_COLOR_V2_RAW = *ev3c::HT_NXT_COLOR_V2_RAW;
*HT_NXT_EOPD_LONG = *ev3c::HT_NXT_EOPD_LONG;
*HT_NXT_EOPD_SHORT = *ev3c::HT_NXT_EOPD_SHORT;
*HT_NXT_FORCE_FORCE = *ev3c::HT_NXT_FORCE_FORCE;
*HT_NXT_GYRO_GYRO = *ev3c::HT_NXT_GYRO_GYRO;
*HT_NXT_IR_LINK_IRLINK = *ev3c::HT_NXT_IR_LINK_IRLINK;
*HT_NXT_IR_RECEIVER_1_MOTOR = *ev3c::HT_NXT_IR_RECEIVER_1_MOTOR;
*HT_NXT_IR_RECEIVER_8_MOTOR = *ev3c::HT_NXT_IR_RECEIVER_8_MOTOR;
*HT_NXT_PIR_PROX = *ev3c::HT_NXT_PIR_PROX;
*HT_NXT_COMPASS_COMPASS = *ev3c::HT_NXT_COMPASS_COMPASS;
*HT_NXT_MAG_MAG = *ev3c::HT_NXT_MAG_MAG;
*HT_NXT_IR_SEEK_V2_DC = *ev3c::HT_NXT_IR_SEEK_V2_DC;
*HT_NXT_IR_SEEK_V2_AC = *ev3c::HT_NXT_IR_SEEK_V2_AC;
*HT_NXT_IR_SEEK_V2_DC_ALL = *ev3c::HT_NXT_IR_SEEK_V2_DC_ALL;
*HT_NXT_IR_SEEK_V2_AC_ALL = *ev3c::HT_NXT_IR_SEEK_V2_AC_ALL;
*HT_NXT_SMUX_MUX = *ev3c::HT_NXT_SMUX_MUX;
*HT_SUPER_PRO_AIN = *ev3c::HT_SUPER_PRO_AIN;
*HT_SUPER_PRO_DIN = *ev3c::HT_SUPER_PRO_DIN;
*HT_SUPER_PRO_DOUT = *ev3c::HT_SUPER_PRO_DOUT;
*HT_SUPER_PRO_DCTRL = *ev3c::HT_SUPER_PRO_DCTRL;
*HT_SUPER_PRO_STROBE = *ev3c::HT_SUPER_PRO_STROBE;
*HT_SUPER_PRO_LED = *ev3c::HT_SUPER_PRO_LED;
*HT_SUPER_PRO_AOUT_0 = *ev3c::HT_SUPER_PRO_AOUT_0;
*HT_SUPER_PRO_AOUT_1 = *ev3c::HT_SUPER_PRO_AOUT_1;
*LEGO_EV3_US_US_DIST_CM = *ev3c::LEGO_EV3_US_US_DIST_CM;
*LEGO_EV3_US_US_DIST_IN = *ev3c::LEGO_EV3_US_US_DIST_IN;
*LEGO_EV3_US_US_LISTEN = *ev3c::LEGO_EV3_US_US_LISTEN;
*LEGO_EV3_US_US_SI_CM = *ev3c::LEGO_EV3_US_US_SI_CM;
*LEGO_EV3_US_US_SI_IN = *ev3c::LEGO_EV3_US_US_SI_IN;
*LEGO_EV3_US_US_DC_CM = *ev3c::LEGO_EV3_US_US_DC_CM;
*LEGO_EV3_US_US_DC_IN = *ev3c::LEGO_EV3_US_US_DC_IN;
*LEGO_EV3_GYRO_GYRO_ANG = *ev3c::LEGO_EV3_GYRO_GYRO_ANG;
*LEGO_EV3_GYRO_GYRO_RATE = *ev3c::LEGO_EV3_GYRO_GYRO_RATE;
*LEGO_EV3_GYRO_GYRO_FAS = *ev3c::LEGO_EV3_GYRO_GYRO_FAS;
*LEGO_EV3_GYRO_GYRO_G_AND_A = *ev3c::LEGO_EV3_GYRO_GYRO_G_AND_A;
*LEGO_EV3_GYRO_GYRO_CAL = *ev3c::LEGO_EV3_GYRO_GYRO_CAL;
*LEGO_EV3_COLOR_COL_REFLECT = *ev3c::LEGO_EV3_COLOR_COL_REFLECT;
*LEGO_EV3_COLOR_COL_AMBIENT = *ev3c::LEGO_EV3_COLOR_COL_AMBIENT;
*LEGO_EV3_COLOR_COL_COLOR = *ev3c::LEGO_EV3_COLOR_COL_COLOR;
*LEGO_EV3_COLOR_REF_RAW = *ev3c::LEGO_EV3_COLOR_REF_RAW;
*LEGO_EV3_COLOR_RGB_RAW = *ev3c::LEGO_EV3_COLOR_RGB_RAW;
*LEGO_EV3_COLOR_COL_CAL = *ev3c::LEGO_EV3_COLOR_COL_CAL;
*LEGO_EV3_TOUCH_TOUCH = *ev3c::LEGO_EV3_TOUCH_TOUCH;
*LEGO_EV3_IR_IR_PROX = *ev3c::LEGO_EV3_IR_IR_PROX;
*LEGO_EV3_IR_IR_SEEK = *ev3c::LEGO_EV3_IR_IR_SEEK;
*LEGO_EV3_IR_IR_REMOTE = *ev3c::LEGO_EV3_IR_IR_REMOTE;
*LEGO_EV3_IR_IR_REM_A = *ev3c::LEGO_EV3_IR_IR_REM_A;
*LEGO_EV3_IR_IR_S_ALT = *ev3c::LEGO_EV3_IR_IR_S_ALT;
*LEGO_EV3_IR_IR_CAL = *ev3c::LEGO_EV3_IR_IR_CAL;
*WEDO_HUB_HUB = *ev3c::WEDO_HUB_HUB;
*WEDO_MOTION_PROX = *ev3c::WEDO_MOTION_PROX;
*WEDO_MOTION_RAW = *ev3c::WEDO_MOTION_RAW;
*WEDO_TILT_TILT = *ev3c::WEDO_TILT_TILT;
*WEDO_TILT_TILT_AXIS = *ev3c::WEDO_TILT_TILT_AXIS;
*WEDO_TILT_RAW = *ev3c::WEDO_TILT_RAW;
*LEGO_POWER_STORAGE_IN_VOLT = *ev3c::LEGO_POWER_STORAGE_IN_VOLT;
*LEGO_POWER_STORAGE_IN_AMP = *ev3c::LEGO_POWER_STORAGE_IN_AMP;
*LEGO_POWER_STORAGE_OUT_VOLT = *ev3c::LEGO_POWER_STORAGE_OUT_VOLT;
*LEGO_POWER_STORAGE_OUT_AMP = *ev3c::LEGO_POWER_STORAGE_OUT_AMP;
*LEGO_POWER_STORAGE_JOULE = *ev3c::LEGO_POWER_STORAGE_JOULE;
*LEGO_POWER_STORAGE_IN_WATT = *ev3c::LEGO_POWER_STORAGE_IN_WATT;
*LEGO_POWER_STORAGE_OUT_WATT = *ev3c::LEGO_POWER_STORAGE_OUT_WATT;
*LEGO_POWER_STORAGE_ALL = *ev3c::LEGO_POWER_STORAGE_ALL;
*LEGO_NXT_TOUCH_TOUCH = *ev3c::LEGO_NXT_TOUCH_TOUCH;
*LEGO_NXT_LIGHT_REFLECT = *ev3c::LEGO_NXT_LIGHT_REFLECT;
*LEGO_NXT_LIGHT_AMBIENT = *ev3c::LEGO_NXT_LIGHT_AMBIENT;
*LEGO_NXT_SOUND_DB = *ev3c::LEGO_NXT_SOUND_DB;
*LEGO_NXT_SOUND_DBA = *ev3c::LEGO_NXT_SOUND_DBA;
*LEGO_NXT_US_US_DIST_CM = *ev3c::LEGO_NXT_US_US_DIST_CM;
*LEGO_NXT_US_US_DIST_IN = *ev3c::LEGO_NXT_US_US_DIST_IN;
*LEGO_NXT_US_US_SI_CM = *ev3c::LEGO_NXT_US_US_SI_CM;
*LEGO_NXT_US_US_SI_IN = *ev3c::LEGO_NXT_US_US_SI_IN;
*LEGO_NXT_US_US_LISTEN = *ev3c::LEGO_NXT_US_US_LISTEN;
*MI_XG1300L_ANGLE = *ev3c::MI_XG1300L_ANGLE;
*MI_XG1300L_SPEED = *ev3c::MI_XG1300L_SPEED;
*MI_XG1300L_ACCEL = *ev3c::MI_XG1300L_ACCEL;
*MI_XG1300L_ALL = *ev3c::MI_XG1300L_ALL;
*MS_ABSOLUTE_IMU_TILT = *ev3c::MS_ABSOLUTE_IMU_TILT;
*MS_ABSOLUTE_IMU_ACCEL = *ev3c::MS_ABSOLUTE_IMU_ACCEL;
*MS_ABSOLUTE_IMU_COMPASS = *ev3c::MS_ABSOLUTE_IMU_COMPASS;
*MS_ABSOLUTE_IMU_MAG = *ev3c::MS_ABSOLUTE_IMU_MAG;
*MS_ABSOLUTE_IMU_GYRO = *ev3c::MS_ABSOLUTE_IMU_GYRO;
*MS_ABSOLUTE_IMU_ALL = *ev3c::MS_ABSOLUTE_IMU_ALL;
*MS_ANGLE_ANGLE = *ev3c::MS_ANGLE_ANGLE;
*MS_ANGLE_ANGLE2 = *ev3c::MS_ANGLE_ANGLE2;
*MS_ANGLE_SPEED = *ev3c::MS_ANGLE_SPEED;
*MS_ANGLE_ALL = *ev3c::MS_ANGLE_ALL;
*MS_EV3_SMUX_MUX = *ev3c::MS_EV3_SMUX_MUX;
*MS_LIGHT_ARRAY_CAL = *ev3c::MS_LIGHT_ARRAY_CAL;
*MS_LIGHT_ARRAY_RAW = *ev3c::MS_LIGHT_ARRAY_RAW;
*MS_LINE_LEADER_PID = *ev3c::MS_LINE_LEADER_PID;
*MS_LINE_LEADER_PID_ALL = *ev3c::MS_LINE_LEADER_PID_ALL;
*MS_LINE_LEADER_CAL = *ev3c::MS_LINE_LEADER_CAL;
*MS_LINE_LEADER_RAW = *ev3c::MS_LINE_LEADER_RAW;
*MS_NXTCAM_TRACK = *ev3c::MS_NXTCAM_TRACK;
*MS_NXTMMX_STATUS = *ev3c::MS_NXTMMX_STATUS;
*MS_NXTMMX_STATUS_OLD = *ev3c::MS_NXTMMX_STATUS_OLD;
*MS_8CH_SERVO_V3 = *ev3c::MS_8CH_SERVO_V3;
*MS_8CH_SERVO_OLD = *ev3c::MS_8CH_SERVO_OLD;
*MS_PIXY_ADAPTER_TRACK = *ev3c::MS_PIXY_ADAPTER_TRACK;
*MS_NXT_TOUCH_MUX_TOUCH_MUX = *ev3c::MS_NXT_TOUCH_MUX_TOUCH_MUX;
*SENSOR_MODE__COUNT_ = *ev3c::SENSOR_MODE__COUNT_;
*SENSOR_MODE__UNKNOWN_ = *ev3c::SENSOR_MODE__UNKNOWN_;
*SENSOR_COMMAND__NONE_ = *ev3c::SENSOR_COMMAND__NONE_;
*HT_NXT_ANGLE_RESET = *ev3c::HT_NXT_ANGLE_RESET;
*HT_NXT_ANGLE_CAL = *ev3c::HT_NXT_ANGLE_CAL;
*HT_NXT_SMUX_HALT = *ev3c::HT_NXT_SMUX_HALT;
*HT_NXT_SMUX_DETECT = *ev3c::HT_NXT_SMUX_DETECT;
*HT_NXT_SMUX_RUN = *ev3c::HT_NXT_SMUX_RUN;
*WEDO_HUB_OUT_OFF = *ev3c::WEDO_HUB_OUT_OFF;
*WEDO_HUB_OUT_ON = *ev3c::WEDO_HUB_OUT_ON;
*WEDO_HUB_CLEAR_ERR = *ev3c::WEDO_HUB_CLEAR_ERR;
*MI_XG1300L_RESET = *ev3c::MI_XG1300L_RESET;
*MI_XG1300L_ACCEL_2G = *ev3c::MI_XG1300L_ACCEL_2G;
*MI_XG1300L_ACCEL_4G = *ev3c::MI_XG1300L_ACCEL_4G;
*MI_XG1300L_ACCEL_8G = *ev3c::MI_XG1300L_ACCEL_8G;
*MS_ABSOLUTE_IMU_BEGIN_COMP_CAL = *ev3c::MS_ABSOLUTE_IMU_BEGIN_COMP_CAL;
*MS_ABSOLUTE_IMU_END_COMP_CAL = *ev3c::MS_ABSOLUTE_IMU_END_COMP_CAL;
*MS_ABSOLUTE_IMU_ACCEL_2G = *ev3c::MS_ABSOLUTE_IMU_ACCEL_2G;
*MS_ABSOLUTE_IMU_ACCEL_4G = *ev3c::MS_ABSOLUTE_IMU_ACCEL_4G;
*MS_ABSOLUTE_IMU_ACCEL_8G = *ev3c::MS_ABSOLUTE_IMU_ACCEL_8G;
*MS_ABSOLUTE_IMU_ACCEL_16G = *ev3c::MS_ABSOLUTE_IMU_ACCEL_16G;
*MS_ANGLE_RESET = *ev3c::MS_ANGLE_RESET;
*MS_LIGHT_ARRAY_CAL_WHITE = *ev3c::MS_LIGHT_ARRAY_CAL_WHITE;
*MS_LIGHT_ARRAY_CAL_BLACK = *ev3c::MS_LIGHT_ARRAY_CAL_BLACK;
*MS_LIGHT_ARRAY_SLEEP = *ev3c::MS_LIGHT_ARRAY_SLEEP;
*MS_LIGHT_ARRAY_WAKE = *ev3c::MS_LIGHT_ARRAY_WAKE;
*MS_LIGHT_ARRAY_60HZ = *ev3c::MS_LIGHT_ARRAY_60HZ;
*MS_LIGHT_ARRAY_50HZ = *ev3c::MS_LIGHT_ARRAY_50HZ;
*MS_LIGHT_ARRAY_UNIVERSAL = *ev3c::MS_LIGHT_ARRAY_UNIVERSAL;
*MS_LINE_LEADER_CAL_WHITE = *ev3c::MS_LINE_LEADER_CAL_WHITE;
*MS_LINE_LEADER_CAL_BLACK = *ev3c::MS_LINE_LEADER_CAL_BLACK;
*MS_LINE_LEADER_SLEEP = *ev3c::MS_LINE_LEADER_SLEEP;
*MS_LINE_LEADER_WAKE = *ev3c::MS_LINE_LEADER_WAKE;
*MS_LINE_LEADER_INV_COL = *ev3c::MS_LINE_LEADER_INV_COL;
*MS_LINE_LEADER_RST_COL = *ev3c::MS_LINE_LEADER_RST_COL;
*MS_LINE_LEADER_SNAP = *ev3c::MS_LINE_LEADER_SNAP;
*MS_LINE_LEADER_60HZ = *ev3c::MS_LINE_LEADER_60HZ;
*MS_LINE_LEADER_50HZ = *ev3c::MS_LINE_LEADER_50HZ;
*MS_LINE_LEADER_UNIVERSAL = *ev3c::MS_LINE_LEADER_UNIVERSAL;
*MS_NXTCAM_TRACK_ON = *ev3c::MS_NXTCAM_TRACK_ON;
*MS_NXTCAM_TRACK_OFF = *ev3c::MS_NXTCAM_TRACK_OFF;
*MS_NXTCAM_TRACK_OBJ = *ev3c::MS_NXTCAM_TRACK_OBJ;
*MS_NXTCAM_TRACK_LINE = *ev3c::MS_NXTCAM_TRACK_LINE;
*MS_NXTCAM_SORT_SIZE = *ev3c::MS_NXTCAM_SORT_SIZE;
*MS_NXTCAM_SORT_COL = *ev3c::MS_NXTCAM_SORT_COL;
*MS_PIXY_ADAPTER_SORT_SIZE = *ev3c::MS_PIXY_ADAPTER_SORT_SIZE;
*MS_PIXY_ADAPTER_SORT_COL = *ev3c::MS_PIXY_ADAPTER_SORT_COL;
*SENSOR_COMMAND__COUNT_ = *ev3c::SENSOR_COMMAND__COUNT_;
*SENSOR_COMMAND__UNKNOWN_ = *ev3c::SENSOR_COMMAND__UNKNOWN_;
*IR_REMOTE__NONE_ = *ev3c::IR_REMOTE__NONE_;
*RED_UP = *ev3c::RED_UP;
*RED_DOWN = *ev3c::RED_DOWN;
*BLUE_UP = *ev3c::BLUE_UP;
*BLUE_DOWN = *ev3c::BLUE_DOWN;
*RED_UP_BLUE_UP = *ev3c::RED_UP_BLUE_UP;
*RED_UP_BLUE_DOWN = *ev3c::RED_UP_BLUE_DOWN;
*RED_DOWN_BLUE_UP = *ev3c::RED_DOWN_BLUE_UP;
*RED_DOWN_BLUE_DOWN = *ev3c::RED_DOWN_BLUE_DOWN;
*BEACON_MODE_ON = *ev3c::BEACON_MODE_ON;
*RED_UP_RED_DOWN = *ev3c::RED_UP_RED_DOWN;
*BLUE_UP_BLUE_DOWN = *ev3c::BLUE_UP_BLUE_DOWN;
*TACHO_DIR = *ev3c::TACHO_DIR;
*TACHO_DESC__LIMIT_ = *ev3c::TACHO_DESC__LIMIT_;
*TACHO__NONE_ = *ev3c::TACHO__NONE_;

my %__ev3_tacho_hash;
tie %__ev3_tacho_hash,"ev3::EV3_TACHO", $ev3c::ev3_tacho;
$ev3_tacho= \%__ev3_tacho_hash;
bless $ev3_tacho, ev3::EV3_TACHO;
*TACHO_TYPE__NONE_ = *ev3c::TACHO_TYPE__NONE_;
*LEGO_EV3_L_MOTOR = *ev3c::LEGO_EV3_L_MOTOR;
*LEGO_EV3_M_MOTOR = *ev3c::LEGO_EV3_M_MOTOR;
*FI_L12_EV3 = *ev3c::FI_L12_EV3;
*TACHO_TYPE__COUNT_ = *ev3c::TACHO_TYPE__COUNT_;
*TACHO_TYPE__UNKNOWN_ = *ev3c::TACHO_TYPE__UNKNOWN_;
*TACHO_COMMAND__NONE_ = *ev3c::TACHO_COMMAND__NONE_;
*LEGO_EV3_L_MOTOR_RUN_FOREVER = *ev3c::LEGO_EV3_L_MOTOR_RUN_FOREVER;
*LEGO_EV3_L_MOTOR_RUN_TO_ABS_POS = *ev3c::LEGO_EV3_L_MOTOR_RUN_TO_ABS_POS;
*LEGO_EV3_L_MOTOR_RUN_TO_REL_POS = *ev3c::LEGO_EV3_L_MOTOR_RUN_TO_REL_POS;
*LEGO_EV3_L_MOTOR_RUN_TIMED = *ev3c::LEGO_EV3_L_MOTOR_RUN_TIMED;
*LEGO_EV3_L_MOTOR_RUN_DIRECT = *ev3c::LEGO_EV3_L_MOTOR_RUN_DIRECT;
*LEGO_EV3_L_MOTOR_STOP = *ev3c::LEGO_EV3_L_MOTOR_STOP;
*LEGO_EV3_L_MOTOR_RESET = *ev3c::LEGO_EV3_L_MOTOR_RESET;
*LEGO_EV3_M_MOTOR_RUN_FOREVER = *ev3c::LEGO_EV3_M_MOTOR_RUN_FOREVER;
*LEGO_EV3_M_MOTOR_RUN_TO_ABS_POS = *ev3c::LEGO_EV3_M_MOTOR_RUN_TO_ABS_POS;
*LEGO_EV3_M_MOTOR_RUN_TO_REL_POS = *ev3c::LEGO_EV3_M_MOTOR_RUN_TO_REL_POS;
*LEGO_EV3_M_MOTOR_RUN_TIMED = *ev3c::LEGO_EV3_M_MOTOR_RUN_TIMED;
*LEGO_EV3_M_MOTOR_RUN_DIRECT = *ev3c::LEGO_EV3_M_MOTOR_RUN_DIRECT;
*LEGO_EV3_M_MOTOR_STOP = *ev3c::LEGO_EV3_M_MOTOR_STOP;
*LEGO_EV3_M_MOTOR_RESET = *ev3c::LEGO_EV3_M_MOTOR_RESET;
*FI_L12_EV3_RUN_FOREVER = *ev3c::FI_L12_EV3_RUN_FOREVER;
*FI_L12_EV3_RUN_TO_ABS_POS = *ev3c::FI_L12_EV3_RUN_TO_ABS_POS;
*FI_L12_EV3_RUN_TO_REL_POS = *ev3c::FI_L12_EV3_RUN_TO_REL_POS;
*FI_L12_EV3_RUN_TIMED = *ev3c::FI_L12_EV3_RUN_TIMED;
*FI_L12_EV3_RUN_DIRECT = *ev3c::FI_L12_EV3_RUN_DIRECT;
*FI_L12_EV3_STOP = *ev3c::FI_L12_EV3_STOP;
*FI_L12_EV3_RESET = *ev3c::FI_L12_EV3_RESET;
*TACHO_COMMAND__COUNT_ = *ev3c::TACHO_COMMAND__COUNT_;
*TACHO_COMMAND__UNKNOWN_ = *ev3c::TACHO_COMMAND__UNKNOWN_;
*TACHO_STOP_COMMAND__NONE_ = *ev3c::TACHO_STOP_COMMAND__NONE_;
*LEGO_EV3_L_MOTOR_COAST = *ev3c::LEGO_EV3_L_MOTOR_COAST;
*LEGO_EV3_L_MOTOR_BRAKE = *ev3c::LEGO_EV3_L_MOTOR_BRAKE;
*LEGO_EV3_L_MOTOR_HOLD = *ev3c::LEGO_EV3_L_MOTOR_HOLD;
*LEGO_EV3_M_MOTOR_COAST = *ev3c::LEGO_EV3_M_MOTOR_COAST;
*LEGO_EV3_M_MOTOR_BRAKE = *ev3c::LEGO_EV3_M_MOTOR_BRAKE;
*LEGO_EV3_M_MOTOR_HOLD = *ev3c::LEGO_EV3_M_MOTOR_HOLD;
*FI_L12_EV3_COAST = *ev3c::FI_L12_EV3_COAST;
*FI_L12_EV3_BRAKE = *ev3c::FI_L12_EV3_BRAKE;
*FI_L12_EV3_HOLD = *ev3c::FI_L12_EV3_HOLD;
*TACHO_STOP_COMMAND__COUNT_ = *ev3c::TACHO_STOP_COMMAND__COUNT_;
*TACHO_STOP_COMMAND__UNKNOWN_ = *ev3c::TACHO_STOP_COMMAND__UNKNOWN_;
*TACHO_COMMAND__NULL_ = *ev3c::TACHO_COMMAND__NULL_;
*TACHO_RUN_FOREVER = *ev3c::TACHO_RUN_FOREVER;
*TACHO_RUN_TO_ABS_POS = *ev3c::TACHO_RUN_TO_ABS_POS;
*TACHO_RUN_TO_REL_POS = *ev3c::TACHO_RUN_TO_REL_POS;
*TACHO_RUN_TIMED = *ev3c::TACHO_RUN_TIMED;
*TACHO_RUN_DIRECT = *ev3c::TACHO_RUN_DIRECT;
*TACHO_STOP = *ev3c::TACHO_STOP;
*TACHO_RESET = *ev3c::TACHO_RESET;
*TACHO_STOP_COMMAND__NULL_ = *ev3c::TACHO_STOP_COMMAND__NULL_;
*TACHO_COAST = *ev3c::TACHO_COAST;
*TACHO_BRAKE = *ev3c::TACHO_BRAKE;
*TACHO_HOLD = *ev3c::TACHO_HOLD;
*TACHO_STATE__NONE_ = *ev3c::TACHO_STATE__NONE_;
*TACHO_RUNNING = *ev3c::TACHO_RUNNING;
*TACHO_RAMPING = *ev3c::TACHO_RAMPING;
*TACHO_HOLDING = *ev3c::TACHO_HOLDING;
*TACHO_STALLED = *ev3c::TACHO_STALLED;
*DC_DIR = *ev3c::DC_DIR;
*DC_DESC__LIMIT_ = *ev3c::DC_DESC__LIMIT_;
*DC__NONE_ = *ev3c::DC__NONE_;

my %__ev3_dc_hash;
tie %__ev3_dc_hash,"ev3::EV3_DC", $ev3c::ev3_dc;
$ev3_dc= \%__ev3_dc_hash;
bless $ev3_dc, ev3::EV3_DC;
*DC_TYPE__NONE_ = *ev3c::DC_TYPE__NONE_;
*RCX_MOTOR = *ev3c::RCX_MOTOR;
*DC_TYPE__COUNT_ = *ev3c::DC_TYPE__COUNT_;
*DC_TYPE__UNKNOWN_ = *ev3c::DC_TYPE__UNKNOWN_;
*DC_COMMAND__NONE_ = *ev3c::DC_COMMAND__NONE_;
*RCX_MOTOR_RUN_FOREVER = *ev3c::RCX_MOTOR_RUN_FOREVER;
*RCX_MOTOR_RUN_TIMED = *ev3c::RCX_MOTOR_RUN_TIMED;
*RCX_MOTOR_RUN_DIRECT = *ev3c::RCX_MOTOR_RUN_DIRECT;
*RCX_MOTOR_STOP = *ev3c::RCX_MOTOR_STOP;
*DC_COMMAND__COUNT_ = *ev3c::DC_COMMAND__COUNT_;
*DC_COMMAND__UNKNOWN_ = *ev3c::DC_COMMAND__UNKNOWN_;
*DC_STOP_COMMAND__NONE_ = *ev3c::DC_STOP_COMMAND__NONE_;
*RCX_MOTOR_COAST = *ev3c::RCX_MOTOR_COAST;
*RCX_MOTOR_BRAKE = *ev3c::RCX_MOTOR_BRAKE;
*DC_STOP_COMMAND__COUNT_ = *ev3c::DC_STOP_COMMAND__COUNT_;
*DC_STOP_COMMAND__UNKNOWN_ = *ev3c::DC_STOP_COMMAND__UNKNOWN_;
*DC_COMMAND__NULL_ = *ev3c::DC_COMMAND__NULL_;
*DC_RUN_FOREVER = *ev3c::DC_RUN_FOREVER;
*DC_RUN_TIMED = *ev3c::DC_RUN_TIMED;
*DC_RUN_DIRECT = *ev3c::DC_RUN_DIRECT;
*DC_STOP = *ev3c::DC_STOP;
*DC_STOP_COMMAND__NULL_ = *ev3c::DC_STOP_COMMAND__NULL_;
*DC_COAST = *ev3c::DC_COAST;
*DC_BRAKE = *ev3c::DC_BRAKE;
*DC_STATE__NONE_ = *ev3c::DC_STATE__NONE_;
*DC_RUNNING = *ev3c::DC_RUNNING;
*DC_RAMPING = *ev3c::DC_RAMPING;
*SERVO_DIR = *ev3c::SERVO_DIR;
*SERVO_DESC__LIMIT_ = *ev3c::SERVO_DESC__LIMIT_;
*SERVO__NONE_ = *ev3c::SERVO__NONE_;

my %__ev3_servo_hash;
tie %__ev3_servo_hash,"ev3::EV3_SERVO", $ev3c::ev3_servo;
$ev3_servo= \%__ev3_servo_hash;
bless $ev3_servo, ev3::EV3_SERVO;
*SERVO_TYPE__NONE_ = *ev3c::SERVO_TYPE__NONE_;
*SERVO_MOTOR = *ev3c::SERVO_MOTOR;
*SERVO_TYPE__COUNT_ = *ev3c::SERVO_TYPE__COUNT_;
*SERVO_TYPE__UNKNOWN_ = *ev3c::SERVO_TYPE__UNKNOWN_;
*SERVO_COMMAND__NONE_ = *ev3c::SERVO_COMMAND__NONE_;
*SERVO_MOTOR_RUN = *ev3c::SERVO_MOTOR_RUN;
*SERVO_MOTOR_FLOAT = *ev3c::SERVO_MOTOR_FLOAT;
*SERVO_COMMAND__COUNT_ = *ev3c::SERVO_COMMAND__COUNT_;
*SERVO_COMMAND__UNKNOWN_ = *ev3c::SERVO_COMMAND__UNKNOWN_;
*SERVO_COMMAND__NULL_ = *ev3c::SERVO_COMMAND__NULL_;
*SERVO_RUN = *ev3c::SERVO_RUN;
*SERVO_FLOAT = *ev3c::SERVO_FLOAT;
*SERVO_STATE__NONE_ = *ev3c::SERVO_STATE__NONE_;
*SERVO_RUNNING = *ev3c::SERVO_RUNNING;
1;
